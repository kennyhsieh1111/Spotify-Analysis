rm(list = ls())
library('Rspotify')
getAllSongs <- function(user, playlist, token) {
idx <- 0
songs <- getPlaylistSongs(user, playlist, idx, token)
while(TRUE){
idx <- idx + 1
songs_tmp <- getPlaylistSongs(user, playlist, idx * 100, token)
songs <- rbind(songs, songs_tmp)
if(dim(songs_tmp)[1]  != 100 | dim(songs)[1] > 500){ break }
}
return(songs)
}
getTrack<-function(id, token){
req <- httr::GET(paste0("https://api.spotify.com/v1/tracks/",id), httr::config(token = token))
json <- httr::content(req)
artists <- json$artists[[1]]$name
album <- json$album$name
image_url <- json$album$images[[2]]$url
listen <- json$external_urls$spotify
print(c(id))
track <- data.frame(id = id,artists = artists, album = album, image_url = image_url, listen_url = listen, stringsAsFactors = F)
return(track)
}
getFeatures_own <- function(spotify_ID,token){
req <- httr::GET(paste0("https://api.spotify.com/v1/audio-features/",spotify_ID), httr::config(token = token))
json1<-data.frame(httr::content(req))
print(class(json1))
dados=data.frame(id=json1$id,
danceability=json1$danceability,
energy=json1$energy,
key=json1$key,
loudness=json1$loudness,
mode=json1$mode,
speechiness=json1$speechiness,
acousticness=json1$acousticness,
instrumentalness=json1$instrumentalness,
liveness=json1$liveness,
valence=json1$valence,
tempo=json1$tempo,
duration_ms=json1$duration_ms,
time_signature=json1$time_signature,
uri=json1$uri,
analysis_url=json1$analysis_url,stringsAsFactors = F)
return(dados)
}
keys <- spotifyOAuth("Spotify Data Analysis","6ea6156a265e413a93ae7c5272e6b155","6db9315501b34f5e9c951b32aab81dee")
user <- getUser("1266145897", token = keys)
playlist <- getPlaylist(user$id, token = keys)
playlist_id <- playlist[which(playlist$name == "Singles"), "id"]
songs <- getAllSongs(user$id, playlist_id, keys) # 耗時
feature <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures1(songs_pl_id[x], keys)
}, 1:length(songs_pl_id))))
songs_pl_id <- songs$id
feature <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures1(songs_pl_id[x], keys)
}, 1:length(songs_pl_id))))
feature <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures_own(songs_pl_id[x], keys)
}, 1:length(songs_pl_id))))
View(feature)
feature <- sapply(songs_pl_id, function(x) getFeatures1(x, keys))
library('Rspotify')
keys <- spotifyOAuth("Spotify Data Analysis","6ea6156a265e413a93ae7c5272e6b155","6db9315501b34f5e9c951b32aab81dee")
rm(list=ls())
keys <- spotifyOAuth("Spotify Data Analysis","6ea6156a265e413a93ae7c5272e6b155","6db9315501b34f5e9c951b32aab81dee")
keys
user <- getUser("1266145897", token = keys)
user
playlist <- getPlaylist(user$id, token = keys)
playlist
playlist_id <- playlist[which(playlist$name == "Singles"), "id"]
user <- getUser("1266145897", keys)
playlist <- getPlaylist(user$id, keys)
user
playlist <- getPlaylist(user$id, keys)
playlist <- getPlaylist(user$id, token = keys)
playlist_id <- playlist[which(playlist$name == "Singles"), "id"]
pl_songs <- getPlaylist(user$id, playlist_id, keys)
pl_songs <- getPlaylist(user$id, playlist_id, token = keys)
playlist_id <- playlist[which(playlist$name == "Singles_2"), "id"]
pl_songs <- getPlaylist(user$id, playlist_id, token = keys)
pl_songs <- getPlaylist(user$id, playlist_id, token = keys)
View(pl_songs)
pl_songs <- getPlaylist(user$id, playlist_id, token = keys)
user$id
pl_songs <- getPlaylist("spotify", "4hOKQuZbraPDIfaGbM3lKI",token=keys)
pl_songs <- getPlaylistSongs("spotify", "4hOKQuZbraPDIfaGbM3lKI",token=keys)
playlist_id <- playlist[which(playlist$name == "Singles"), "id"]
pl_songs <- getPlaylistSongs(user$id, playlist_id, token=keys)
View(pl_songs)
getPlaylistSongs()
getPlaylistSongs
source('Expansion.R')
source('Expansion.R', "r")
getwd()
setwd('~/Documents/Spotify')
source('Expansion.R')
songs <- getAllSongs(user$id, playlist_id, keys)
source('Expansion.R')
songs <- getAllSongs(user$id, playlist_id, keys)
songs <- getAllSongs(user$id, playlist_id, keys)
songs <- getAllSongs(user$id, playlist_id, keys)
source('Expansion.R')
songs <- getAllSongs(user$id, playlist_id, keys)
playlist_len <- playlist[which(playlist$name == "Singles"), "tracks"]
songs <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 0:(playlist_len/100))))
songs <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
print(x)
}, 0:(playlist_len/100))))
songs <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 0:5)))
View(songs)
songs_part2 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 5:10)))
songs_part2 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 6:10)))
songs_part2 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
print(x)
}, 6:10)))
songs_part2 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
print(x)
}, 7:10)))
View(songs_part2)
songs_part2 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
print(x)
}, 7:10)))
songs_part1 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 7:9)))
View(songs_part1)
songs_part2 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 6:7)))
songs_part2 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 6:8)))
songs_part2 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 7:8)))
View(songs_part2)
songs_part2 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 7:9)))
songs_part1 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 0:5)))
songs_part2 <- as.data.frame(do.call(rbind, Map(function(x){
getPlaylistSongs(user$id, playlist_id, offset=100*x+1, token=keys)
}, 7:10)))
View(songs_part2)
songs <- rbind(songs_part1, songs_part2)
rm(songs_part1, songs_part2)
rm(songs_part1, songs_part2, pl_songs)
View(songs)
View(songs)
feature <- getFeatures(sogns$id[1], token=keys)
feature <- getFeatures(songs$id[1], token=keys)
View(feature)
features <- songs$id
View(feature)
print(features)
rm(feature)
features <- getFeatures(features, token=keys)
features_id <- songs$id
songs[0,0]
print(songs[, 0])
print(songs[0, 0])
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures(features_id[x], token=keys)
}, 1:length(features_id))))
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures(features_id[x], token=keys)
print(x)
}, 1:length(features_id))))
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures(features_id[x], token=keys)
print(x)
}, 1:300)))
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures(features_id[x], token=keys)
Sys.time(0.5)
}, 1:300)))
Sys.sleep(0.5)
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures(features_id[x], token=keys)
Sys.sleep(0.5)
}, 1:300)))
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures(features_id[x], token=keys)
print(x)
Sys.sleep(0.5)
}, 1:300)))
View(features)
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures(features_id[x], token=keys)
print(x)
Sys.sleep(0.5)
}, 1:2)))
features <- getFeatures(features_id[0], token=keys)
features <- getFeatures(features_id[1], token=keys)
View(features)
}
for(i in 1:2){
features <- getFeatures(features_id[i], token=keys)
}
View(features)
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures(features_id[x], token=keys)
print(x)
Sys.sleep(0.5)
}, 1:2)))
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures(features_id[x], token=keys)
print(x)
Sys.sleep(0.5)
}, 1:1)))
getFeatures_own <- function(spotify_ID,token){
req <- httr::GET(paste0("https://api.spotify.com/v1/audio-features/",spotify_ID), httr::config(token = token))
json1<-data.frame(httr::content(req))
print(class(json1))
dados=data.frame(id=json1$id,
danceability=json1$danceability,
energy=json1$energy,
key=json1$key,
loudness=json1$loudness,
mode=json1$mode,
speechiness=json1$speechiness,
acousticness=json1$acousticness,
instrumentalness=json1$instrumentalness,
liveness=json1$liveness,
valence=json1$valence,
tempo=json1$tempo,
duration_ms=json1$duration_ms,
time_signature=json1$time_signature,
uri=json1$uri,
analysis_url=json1$analysis_url,stringsAsFactors = F)
return(dados)
}
source('Expansion.R')
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures_own(features_id[x], token=keys)
}, 1:length(features_id))))
View(features)
source('Expansion.R')
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures_own(features_id[x], token=keys)
print(x)
}, 1:length(features_id))))
View(features)
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures_own(features_id[x], token=keys)
#print(x)
}, 1:2)))
View(features)
print(x)
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures_own(features_id[x], token=keys)
print(x)
}, 1:2)))
View(features)
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures_own(features_id[x], token=keys)
}, 1:length(features_id))))
getFeatures_own <- function(spotify_ID,token){
req <- httr::GET(paste0("https://api.spotify.com/v1/audio-features/",spotify_ID), httr::config(token = token))
json1<-data.frame(httr::content(req))
dados=data.frame(id=json1$id,
danceability=json1$danceability,
energy=json1$energy,
key=json1$key,
loudness=json1$loudness,
mode=json1$mode,
speechiness=json1$speechiness,
acousticness=json1$acousticness,
instrumentalness=json1$instrumentalness,
liveness=json1$liveness,
valence=json1$valence,
tempo=json1$tempo,
duration_ms=json1$duration_ms,
time_signature=json1$time_signature,
uri=json1$uri,
analysis_url=json1$analysis_url,stringsAsFactors = F)
Sys.time(0.1)
return(dados)
}
source('Expansion.R')
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures_own(features_id[x], token=keys)
}, 1:length(features_id))))
source('Expansion.R')
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures_own(features_id[x], token=keys)
}, 1:length(features_id))))
source('Expansion.R')
features <- as.data.frame(do.call(rbind, Map(function(x){
getFeatures_own(features_id[x], token=keys)
}, 1:length(features_id))))
View(features)
save.image('Songs+Features.RData')
rm(i)
save.image('Songs+Features.RData')
rm(getAllPlaylistSongs())
rm(getAllPlaylistSongs
rm(getAllPlaylistSongs
)
rm(getAllPlaylistSongs)
rm(getAllSongs)
rm(getFeatures_own)
source('Expansion.R')
save.image('Songs+Features.RData')
load('Songs+Features.RData')
View(songs)
View(features)
data <- join(songs, features, by = id)
library(dplyr)
data <- join(songs, features, by = id)
data <- inner_join(songs, features, by = id)
View(songs)
data <- merge(songs, features, by = "id")
View(data)
data <- merge(songs, features, by = "id", all.x = TRUE)
data <- merge(songs, features, by = "id", all.y = TRUE)
View(data)
data <- unique(data)
View(data)
data <- merge(songs, features, by = "id", all.y = TRUE)
duplicated(data)
grep(TRUE, duplicated(data))
grep(TRUE, duplicated(songs))
data <- merge(songs, features, by = "id", all.y = TRUE)
data <- unique(data)
colnames(data)
data <- data[, -c("artistId", "url", "analysis_url")]
data <- data[, -c("artistId", "uri", "analysis_url")]
class(data)
data <- data[, !c("artistId", "uri", "analysis_url")]
data <- data[, !(colnames(df) %in% c("artistId", "uri", "analysis_url"))]
View(data)
data <- data[, !(colnames(data) %in% c("artistId", "uri", "analysis_url"))]
data <- merge(songs, features, by = "id", all.y = TRUE)
data <- unique(data)
data <- data[, !(colnames(data) %in% c("artistId", "uri", "analysis_url"))]
data <- merge(songs, features, by = "id")
data <- unique(data)
data <- data[, !(colnames(data) %in% c("artistId", "uri", "analysis_url"))]
save.image('SongsData.RData')
load('SongsData.RData')
rm(list=ls())
load('SongsData.RData')
summary(data)
class(summary(data))
t <- class(summary(data))
t
t <- summary(data)
t
t[1,]
t[3,]
t[4,]
summary <- summary(data)
summary[4,]
summary[4, -c(1,2)]
summary <- summary(data)
summary[4, ]
summary[4, c(1,2,4,5)]
summary <- summary(data)
summary[4, -c(1,2,4,5)]
ggplot(data = summary[4, -c(1,2,4,5)], aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean of Features") + xlab('features')
library(ggplot2)
summary <- summary(data)
summary[4, -c(1,2,4,5)]
ggplot(data = summary[4, -c(1,2,4,5)], aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean of Features") + xlab('features')
summary[4, -c(1,2,4,5)]
feature_mean <- summary[4, -c(1,2,4,5)]
feature_mean[1]
class(feature_mean[1])
features_mean <- data[, -c(1,2,4,5)]
View(features_mean)
feauture_mean <- data.frame(features = colnames(features_mean), means = colMeans(features_mean), row.names = NULL)
features_mean <- data[, -c(1,2,4,5)]
features_mean <- data.frame(features = colnames(features_mean), means = colMeans(features_mean), row.names = NULL)
rm(feauture_mean)
features_mean <- data[, -c(1,2,4,5)]
features_mean <- data.frame(features = colnames(features_mean), means = colMeans(features_mean), row.names = NULL)
View(features_mean)
summary(data)
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean of Features") + xlab('features')
summary(data)
features_mean <- data[, -c(1,2,4,5,17)]
features_mean <- data.frame(features = colnames(features_mean), means = colMeans(features_mean), row.names = NULL)
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean of Features") + xlab('features')
features_mean <- data[, -c(1,2,4,5,16,17)]
features_mean <- data.frame(features = colnames(features_mean), means = colMeans(features_mean), row.names = NULL)
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean of Features") + xlab('features')
features_mean <- data[, -c(1:5,16,17)]
features_mean <- data.frame(features = colnames(features_mean), means = colMeans(features_mean), row.names = NULL)
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean of Features") + xlab('features')
summary(data)
features_mean <- data[, c(5,6,10,11:14)]
features_mean <- data.frame(features = colnames(features_mean), means = colMeans(features_mean), row.names = NULL)
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean of Features") + xlab('features')
View(features_mean)
summary(data)
View(songs)
View(data)
features_mean <- data[, c(5,6,10,11:14)]
View(features_mean)
summary(data)
features_mean <- data[, c(6,7,10,11:14)]
features_mean <- data.frame(features = colnames(features_mean), means = colMeans(features_mean), row.names = NULL)
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean of Features") + xlab('features')
features_mean <- data[, c(6,7,11:14)]
features_mean <- data.frame(features = colnames(features_mean), means = colMeans(features_mean), row.names = NULL)
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean of Features") + xlab('features')
features_mean <- data[, c(6,7,11:15)]
features_mean <- data.frame(features = colnames(features_mean), means = colMeans(features_mean), row.names = NULL)
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean of Features") + xlab('features')
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean value of the song features of Singles") + xlab('features')
summary(data)
features_mean <- data[, c(6,7,11:15)]
library(matrixStats)
features_std <- data.frame(features = colnames(features), std = colSds(features), row.names = NULL)
View(features)
features <- data[, c(6,7,11:15)]
features_mean <- data.frame(features = colnames(features), means = colMeans(features), row.names = NULL)
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean value of the song features of Singles") + xlab('features')
library(matrixStats)
features_std <- data.frame(features = colnames(features), std = colSds(features), row.names = NULL)
View(features)
colSds(features)
colSds(matrix(features))
a <- matrix(features))
a <- matrix(features)
View(a)
rm(a)
View(playlist)
View(features)
sd(features[,1])
dim(features)
dim(features)[2]
features_std <- Map(function(x){
sd(features[, i])
}, 1:dim(features)[2])
sd(features[, x])
?sapply
features_std <- sapply(features, sd)
features_std
summary(data)
features_std <- data.frame(features = colnames(features), std = sapply(features, sd), row.names = NULL)
View(features_std)
ggplot(data = features_std, aes(x = reorder(features, -std), y = std) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean value of the song features of Singles") + xlab('features')
ggplot(data = features_std, aes(x = reorder(features, -std), y = std)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean value of the song features of Singles") + xlab('features')
ggplot(data = features_std, aes(x = reorder(features, -std), y = std)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean value of the song features of Singles") + xlab('features')
ggplot(data = features_std, aes(x = reorder(features, -std), y = std)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Std value of the song features of Singles") + xlab('features')
mean(features_std[,2])
mean(features_std[,2]); sum(features_std[,2])
colnames(data)
boring <- data[, c(6,7,9,16)]
View(boring)
boring$score <- (data[1]+data[2])*100 + data[3] + data[4]
boring$score <- (data[1]+data[2])*100
boring$score <- (data[1] + data[2])*100
str(boring)
boring$score <- data[1]
boring$score <- (boring[1] + boring[2])*100 + boring[3] + boring[4]
boring <- data[, c(6,7,9,16)]
boring$score <- (boring[1] + boring[2])*100 + boring[3] + boring[4]
boring <- data[, c(6,7,9,16)]
boring$score <- (boring[1] + boring[2])*100 + boring[3] + boring[4]
boring[score] <- (boring[1] + boring[2])*100 + boring[3] + boring[4]
boring['score'] <- (boring[1] + boring[2])*100 + boring[3] + boring[4]
View(boring)
boring <- data[, c(6,7,9,16)]
boring$score <- (boring[1] + boring[2])*100 + boring[3] + boring[4]
boring['score'] <- (boring[1] + boring[2])*100 + boring[3] + boring[4]
boring <- data[, c(6,7,9,16)]
boring['score'] <- (boring[1] + boring[2])*100 + boring[3] + boring[4]
View(boring)
ggplot2(data = boring, aes(score)) + geom_histogram()
ggplot(data = boring, aes(score)) + geom_histogram()
ggplot(data = boring, aes(score)) + geom_histogram(fill = "#17B3B7")
mean(boring[2])
mean(boring[5])
mean(boring[, 5])
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean value of the song features of Singles") + xlab('features')
