hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
hchart(hplot, hcaes(x = PC1, y = PC2, group = opt_clus), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$cluster), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'Clustering Coachella') %>%
hc_subtitle(text = HTML('<em>PCA and clusters of artist tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
opt_clus <- NbClust(data = feature_data, distance = "manhattan",
min.nc = 2, max.nc = 15, method = "ward.D", index = "all")
library('factoextra')
library('NbClust')
rm(list=ls())
load('SongsData.RData')
feature_data <- data[, c(6,7,9,11:17)]
feature_data <- data.frame(scale(feature_data, center = TRUE, scale = TRUE))
library('factoextra')
library('NbClust')
set.seed(123)
opt_clus <- NbClust(data = feature_data, distance = "manhattan",
min.nc = 2, max.nc = 15, method = "ward.D", index = "all")
opt_clus$Best.nc
opt_clus$Best.partition
fviz_nbclust(opt_clus) + theme_minimal()
opt_clus <- opt_clus$Best.partition
feature_pca <- prcomp(feature_data, scale = TRUE)
summary(feature_pca)
save.image('Cluster_result.RData')
feature_pca$rotation
feature_pca$x
feature_pca$x[1:2]
rm(list=ls())
load('SongsData.RData')
library(ggplot2)
library(highcharter)
library(dplyr)
summary(data)
features <- data[, c(6,7,11:15)]
features_mean <- data.frame(features = colnames(features), means = colMeans(features), row.names = NULL)
ggplot(data = features_mean, aes(x = reorder(features, -means), y = means)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Mean value of the song features of Singles") + xlab('features')
features_std <- data.frame(features = colnames(features), std = sapply(features, sd), row.names = NULL)
ggplot(data = features_std, aes(x = reorder(features, -std), y = std)) + geom_bar(stat = 'identity', fill = "#17B3B7") +
ggtitle("Std value of the song features of Singles") + xlab('features')
mean(features_std[,2]); sum(features_std[,2])
boring <- data[, c(6,7,9,16)]
boring['score'] <- (boring[1] + boring[2])*100 + boring[3] + boring[4]
ggplot(data = boring, aes(score)) + geom_histogram(fill = "#17B3B7")
ggplot(data = boring, aes(score)) + geom_histogram(fill = "#17B3B7") +
labs(x = 'Boring Scores', y = 'Count',
title = 'Boring Score of Singles Playlist', subtitle = 'hello')
ggplot(data = boring, aes(score)) + geom_histogram(fill = "#17B3B7") +
labs(x = 'Boring Scores', y = 'Count',
title = 'Boring Score of Singles Playlist', subtitle = 'Loudness + Tempo + (Energy + Danceability)*100')
hyper <- data[, c(2,6:7)]
hchart(hyper, "scatter", hcaes(x = energy, y = danceability)) %>%
hc_add_theme(hc_theme_economist()) %>%
hc_title(text = "The Correlation between Energy & Danceability") %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Energy :</b> {point.energy}<br><b>Danceability :</b> {point.danceability}")
library(highcharter)
library(RColorBrewer)
library(shiny)
rm(list=ls())
load('SongsData.RData')
library(highcharter)
library(RColorBrewer)
library(shiny)
rm(list=ls())
load('Cluster_result.RData')
lam <- feature_pca$sdev[1:2]
feature_pca$sdev
nrow(feature_pca$x)
lam <- feature_pca$sdev[1:2] * sqrt(nrow(feature_pca$x))
hplot <- (feature_pca$x[, 1:2] / lam) %>%
as.data.frame %>%
mutate(name = data$tracks,
cluster = opt_clus,
tooltip = name)
View(hplot)
dfobs <- (feature_pca$x[, 1:2] / lam) %>%
as.data.frame
feature_pca
feature_pca$x
feature_pca$rotation
dfcomp <- feature_pca$rotation[, 1:2] * lam
mx <- max(abs(dfobs[, 1:2]))
mc <- max(abs(dfcomp))
dfcomp <- dfcomp %>%
{ . / mc * mx } %>%
as.data.frame() %>%
setNames(c("x", "y")) %>%
rownames_to_column("name") %>%
as_data_frame() %>%
group_by_("name") %>%
do(data = list(c(0, 0), c(.$x, .$y))) %>%
list_parse
pal <- brewer.pal(3, 'Dark2')
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$cluster), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'Clustering Coachella') %>%
hc_subtitle(text = HTML('<em>PCA and clusters of artist tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$cluster), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'Clustering Coachella') %>%
hc_subtitle(text = HTML('<em>PCA and clusters of artist tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
dfcomp
pal <- brewer.pal(2, 'Dark2')
?brewer.pal
pal <- brewer.pal(3, 'Accent')
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$cluster), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'Clustering Coachella') %>%
hc_subtitle(text = HTML('<em>PCA and clusters of artist tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$name), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_title(text = 'Clustering Coachella') %>%
hc_subtitle(text = HTML('<em>PCA and clusters of artist tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
#hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$name), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_tooltip(pointFormat="{point.name}") %>%
hc_title(text = 'Clustering Coachella') %>%
hc_subtitle(text = HTML('<em>PCA and clusters of artist tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
dfcomp <- feature_pca$rotation[, 1:2] * lam
mx <- max(abs(dfobs[, 1:2]))
mc <- max(abs(dfcomp))
dfcomp <- dfcomp %>%
{ . / mc * mx } %>%
as.data.frame() %>%
setNames(c("x", "y")) %>%
rownames_to_column("name") %>%
as_data_frame() %>%
group_by_("name") %>%
do(data = list(c(0, 0), c(.$x, .$y))) %>%
list_parse
pal <- brewer.pal(3, 'Accent')
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
#hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$name), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_tooltip(pointFormat="{point.name}") %>%
hc_title(text = 'Clustering Coachella') %>%
hc_subtitle(text = HTML('<em>PCA and clusters of artist tracks on Spotify</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
#hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$name), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_tooltip(pointFormat="{point.name}") %>%
hc_title(text = 'Clustering Singles') %>%
hc_subtitle(text = HTML('<em>PCA and Clusters of tracks in Singles</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
dfcomp
if(hplot['cluster'] == 1){}
if(hplot['cluster'] == 1){
print(1)
}
library(htmlwidgets)
clus_result <- hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
#hc_tooltip(shared = F, formatter = JS(paste0("function() {var text = ''; if ([", paste0("'", unique(hplot$name), "'", collapse = ', '),"].indexOf(this.series.name) >= 0) {text = this.point.tooltip;} else {text = this.series.name;}return text;}"))) %>%
hc_tooltip(pointFormat="{point.name}") %>%
hc_title(text = 'Clustering Singles') %>%
hc_subtitle(text = HTML('<em>PCA and Clusters of tracks in Singles</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
htmlwidgets::saveWidget(widget = clus_result, file = "Clustering_result.html")
nrow(feature_pca$rotation)
clus_result <- hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)-1))) %>%
hc_tooltip(pointFormat="{point.name}") %>%
hc_title(text = 'Clustering Tracks') %>%
hc_subtitle(text = HTML('<em>PCA and Clusters of tracks in Singles</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
clus_result
pal
pal <- brewer.pal(3, 'Accent')[1:2]
clus_result <- hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
hc_tooltip(pointFormat="{point.name}") %>%
hc_title(text = 'Clustering Tracks') %>%
hc_subtitle(text = HTML('<em>PCA and Clusters of tracks in Singles</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
clus_result
htmlwidgets::saveWidget(widget = clus_result, file = "Clustering_result.html")
dfcomp
clus_result <- hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp[[1]]) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
hc_tooltip(pointFormat="{point.name}") %>%
hc_title(text = 'Clustering Tracks') %>%
hc_subtitle(text = HTML('<em>PCA and Clusters of tracks in Singles</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
clus_result
clus_result <- hchart(hplot, hcaes(x = PC1, y = PC2, group = cluster), type = 'scatter') %>%
hc_add_series_list(dfcomp) %>%
hc_colors(color = c(pal, rep('lightblue', nrow(feature_pca$rotation)))) %>%
hc_tooltip(pointFormat="{point.name}") %>%
hc_title(text = 'Clustering Tracks') %>%
hc_subtitle(text = HTML('<em>PCA and Clusters of tracks in Singles</em>')) %>%
hc_xAxis(title = list(text = 'Principle Component 1')) %>%
hc_yAxis(title = list(text = 'Principle Component 2')) %>%
hc_add_theme(hc_theme_smpl())
load('SongsData.RData')
View(data)
colnames(data)
fq_data <- data[2,5,15]
load('SongsData.RData')
fq_data <- data[, c(2,5,15)]
View(fq_data)
fq_data <- data[, c(2,7,15)]
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_add_theme(hc_theme_economist()) %>%
hc_title(text = "The Correlation between Energy & Danceability") %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Energy :</b> {point.energy}<br><b>Danceability :</b> {point.danceability}")
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_add_theme(hc_theme_economist()) %>%
hc_title(text = "The Correlation between Energy & Danceability") %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Danceability :</b> {point.valence}<br><b>Energy :</b> {point.energy}")
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_add_theme(hc_theme_economist()) %>%
hc_title(text = "The Correlation between Energy & Danceability") %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}")
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_add_theme(hc_theme_economist()) %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}")
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(max = 1) %>% hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
hchart(princomp(feature_data, cor = TRUE))
list(label = list(text = "This is a plotLine"),
color = "#'FF0000",
width = 2,
value = 0.5))) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
list(label = list(text = "This is a plotLine"),
color = "#'FF0000",
width = 2,
value = 0.5))) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
list(label = list(text = "This is a plotLine"),
color = "#'FF0000",
width = 2,
value = 0.5))) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(
plotLines = list(
list(label = list(text = "This is a plotLine"),
color = "#'FF0000",
width = 2,
value = 0.5))) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(
plotLines = list(
list(label = list(text = "This is a plotLine"),
color = "#FFFFFF",
width = 2,
value = 0.5))) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(
plotLines = list(
list(label = list(text = "This is a plotLine"),
color = "#FFFFFF",
width = 10,
value = 0.5))) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(
plotLines = list(
list(label = list(text = "This is a plotLine"),
color = "#FFFFFF",
width = 5,
value = 0.5))) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(
plotLines = list(
list(color = "#FFFFFF",
width = 5,
value = 0.5))) %>%
hc_yAxis( plotLines = list(
list(color = "#FFFFFF",
width = 5,
value = 0.5))) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
list(color = "#FFFFFF",
width = 5,
value = 0.5))) %>%
hc_yAxis(max = 1, plotLines = list(
list(color = "#FFFFFF",
width = 5,
value = 0.5))) %>%
hc_yAxis(max = 1, plotLines = list(
list(color = "#FFFFFF",
width = 5,
value = 0.5))) %>%
hc_yAxis(max = 1, plotLines = list(
list(color = "#FFFFFF",
width = 5,
value = 0.5))) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
list(color = "#FFFFFF",
width = 5,
value = 0.5))) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(max = 1)
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_economist())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(max = 1) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(max = 1) %>%
hc_yAxis(max = 1,
plotLines = list(value = 0.5, width = 2)) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(max = 1,
plotLines = list(value = 0.5, width = 2)) %>%
hc_yAxis(max = 1,
plotLines = list(value = 0.5, width = 2)) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
list(value = 0.5, width = 2))) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
list(value = 0.5, width = 2)) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
list(value = 0.5, width = 2)) %>%
hc_yAxis(max = 1,
plotLines = list(
list(value = 0.5, width = 2)) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
list(value = 0.5, width = 2))) %>%
hc_yAxis(
list(value = 0.5, width = 2))) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
list(value = 0.5, width = 2)) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
list(value = 0.5, width = 2)) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
hchart(fq_data, "scatter", hcaes(x = valence, y = energy)) %>%
hc_xAxis(max = 1) %>%
hc_yAxis(max = 1) %>%
hc_tooltip(headerFormat = "", valueDecimals=2, borderWidth=2,
hideDelay=100, useHTML=T, padding=10,
pointFormat="<b>{point.tracks}</b><br><b>Valence :</b> {point.valence}<br><b>Energy :</b> {point.energy}") %>%
hc_title(text = "Track Sentiment Quadrant") %>%
hc_add_theme(hc_theme_db())
